version: '3.7'

services:
  # MySql
  # https://github.com/docker-library/docs/tree/master/mysql#mysql_database
  # https://docs.docker.com/samples/library/mysql/#environment-variables
  # https://github.com/docker-library/mysql/issues/275 (troubleshooting connection)
  pinakes-mysql:
    image: mysql
    container_name: pinakes-mysql
    # https://github.com/docker-library/mysql/issues/454
    command: --default-authentication-plugin=mysql_native_password
    environment:
      # the password that will be set for the MySQL root superuser account
      # Note: use dictionary like here rather than array (- name = value)
      # or you might get MySql connection errors!
      # https://stackoverflow.com/questions/37459031/connecting-to-a-docker-compose-mysql-container-denies-access-but-docker-running/37460872#37460872
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_ROOT_HOST: '%'
    ports:
      - 3306:3306
    networks:
      - pinakes-network

  pinakes-api:
    image: vedph2020/pinakes-api:1.0.0
    ports:
      # https://stackoverflow.com/questions/48669548/why-does-aspnet-core-start-on-port-80-from-within-docker
      - PORT:80
    depends_on:
      - pinakes-mysql
    volumes:
      # this is used to pass the data to the API service
      - opt/pinakes:opt/pinakes
    environment:
      # for Windows use : as separator, for non Windows use __
      # (see https://github.com/aspnet/Configuration/issues/469)
      - CONNECTIONSTRINGS__DEFAULT=Server=pinakes-mysql;port=3306;Database={0};Uid=root;Pwd=mysql
      - SEED__INDEXDELAY=25
      - ZOTEROKEY=TODO
      - DATA__SOURCEDIR=opt/pinakes
    networks:
      - pinakes-network

networks:
  pinakes-network:
    driver: bridge
